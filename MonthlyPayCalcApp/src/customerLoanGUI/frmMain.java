

package customerLoanGUI;
import com.sun.deploy.uitoolkit.ui.UIFactory;
import java.io.BufferedReader;
import javax.swing.JFileChooser;
import java.io.File;   
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class frmMain extends javax.swing.JFrame {
    
    /** Creates new form Antenna */
    public frmMain() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        rptTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CrossKey Monthly Loan Payment Calc.");
        setName("frmMain"); // NOI18N
        setResizable(false);

        jButton4.setText("Import File");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        rptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer", "Total loan", "Interest", "Years", "Monthly Pay"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rptTable.setName("rptTable"); // NOI18N
        jScrollPane1.setViewportView(rptTable);
        if (rptTable.getColumnModel().getColumnCount() > 0) {
            rptTable.getColumnModel().getColumn(0).setMinWidth(200);
            rptTable.getColumnModel().getColumn(0).setMaxWidth(200);
            rptTable.getColumnModel().getColumn(1).setMinWidth(80);
            rptTable.getColumnModel().getColumn(1).setMaxWidth(80);
            rptTable.getColumnModel().getColumn(2).setMinWidth(80);
            rptTable.getColumnModel().getColumn(2).setMaxWidth(80);
            rptTable.getColumnModel().getColumn(3).setMinWidth(60);
            rptTable.getColumnModel().getColumn(3).setMaxWidth(60);
            rptTable.getColumnModel().getColumn(4).setMinWidth(80);
            rptTable.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked

        // TODO add your handling code here:
        try {
            String record="";
            ArrayList<customerLoan> customerList=new ArrayList<customerLoan>();
            
            JFileChooser importFileDialog = new JFileChooser();               
            importFileDialog.setFileFilter(new FileNameExtensionFilter("Text File (*.txt)", "txt"));
            if(importFileDialog.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
            {                
                BufferedReader reader = new BufferedReader(new FileReader(importFileDialog.getSelectedFile()));
                reader.readLine();
                while ((record = reader.readLine()) != null)
			{
				if(record.length()>0 && !record.equals("."))
					customerList.add(creatCustomer(record));
			}
			reader.close();
            }
            
            DefaultTableModel model=(DefaultTableModel) rptTable.getModel();
            Object rowCustomer[]=new Object[5];
            
            for(customerLoan cl:customerList )
            {                
                rowCustomer[0]=cl.getName();
                rowCustomer[1]=cl.getTotalLoan();
                rowCustomer[2]=cl.getInterest();
                rowCustomer[3]=cl.getYears();
                rowCustomer[4]=String.format( "%.2f",cl.getMonthlyPay());
                model.addRow(rowCustomer);
//JOptionPane.showMessageDialog(this,cl.getName()+String.valueOf(cl.getTotalLoan()));
            }
        
            
            
            
            
            
            
            
            
            
        } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_jButton4MouseClicked
    
    
    
    
    
    private  customerLoan creatCustomer(String record)
	{
		try
		{		
		
		int startIndex = 0;
		int fieldIndex = 0;
        String[] recordFields = new String[4];
        Boolean isquotation = false;
        int pointer = 0;
        
        //search till end of record
        while (pointer < record.length())
        {
            /*check every character in record until finding ','
            if before finding ',' it was a '"' in record, ignore the ',' until you find another '"'*/
            while (pointer < record.length() && (isquotation || record.charAt(pointer) != ','))
            {
                //if current character is '"', change value of isquotation
                if (record.charAt(pointer) == '"') isquotation = !isquotation;
                pointer++;

            }
            //extract the found field by substring from record
            recordFields[fieldIndex] = record.substring(startIndex, pointer);
            pointer++;
            fieldIndex++;
            //Set start Index to position of first character of next field
            startIndex = pointer;
        }
				        
		return new customerLoan(recordFields[0].replace('"',' ').trim(),Double.parseDouble(recordFields[1]) , Double.parseDouble(recordFields[2]), Integer.parseInt(recordFields[3]));
		
		}
		catch (Exception ex) {
			System.out.println(ex.getMessage());
			return null;
		}
	}

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable rptTable;
    // End of variables declaration//GEN-END:variables
    
}
